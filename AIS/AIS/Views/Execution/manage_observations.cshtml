@{
    ViewData["Title"] = "Manage Observations";
    Layout = "_Layout";
}
<style type="text/css">
    .evidence-link {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .evidence-icon {
        margin-right: 10px;
    }
</style>
<script type="text/javascript">
    var g_obsId = 0;
    var g_newStatusId = 0;
    var g_riskId = 0;
    var g_currentStatus = 0;
    $(document).ready(function () {
        $('#entitySelectField').select2();
        var entName = $('#manageObsPanel tbody .entity_name_field:first').text();
        $('#entityNameField').val(entName);
        var periodName = $('#manageObsPanel tbody .period_name_field:first').text();
        $('#auditPeriodNameField').val(periodName);

        $('#updateMemoContent').richText({
            imageUpload: false,
            fileUpload: false,
            videoEmbed: false,
            urls: false
        });

        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/GetReferenceTypes",
            type: "GET",
            cache: false,
            success: function (data) {
                if (data && data.length > 0) {
                    $.each(data, function (i, v) {
                        $('#referenceTypeSelect').append(
                            $('<option>', { value: v.id, text: v.name })
                        );
                    });
                }
            }
        });

        $('#referenceTypeSelect').on('change', function () {
            if ($(this).val() !== "0") {
                $('#instructionFields').show();
                $('#divisionSelect').show();
                loadDivisions();
            } else {
                $('#instructionFields').hide();
                $('#divisionSelect').hide();
                $('#instructionsTitle').val('');
                $('#instructionsDate').val('');
                $('#instructionsDetails').val('');
                $('#divisionSelect').val('0');
            }
        });

        function loadDivisions() {
            $('#divisionSelect').empty();
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/getparentrel",
                type: "POST",
                data: {
                    'ENTITY_REALTION_ID': 4
                },
                cache: false,
                success: function (data) {
                    $('#divisionSelect').append('<option value="0">--Select Division--</option>');
                    $.each(data, function (i, v) {
                        $('#divisionSelect').append('<option value="' + v.entitY_ID + '">' + v.description + '</option>');
                    });
                },
                dataType: "json",
            });
        }
    });
    function reloadLocation() {
        getEntityObservation();
    }

    function ObservationViewerPanel(obs_id, status_id, risk_id) {
        g_obsId = obs_id;
        g_riskId = risk_id;
        g_currentStatus = status_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_dept_observation_text",
            type: "POST",
            data: {
                'OBS_ID': obs_id
            },
            cache: false,
            success: function (data) {
                console.log(data);
                $('#viewMemoModel').modal('show');
                $('#viewMemo_memo').html(data[0].obS_TEXT);
                $('#viewMemo_heading').html(data[0].heading);
                $('#viewMemo_risk').val(data[0].obS_RISK_ID);
                $('#viewMemo_response').html(data[0].obS_REPLY);
                $('#viewMemo_subprocess').html(data[0].nature);
                $('#viewMemo_violation').html(data[0].violation);

                if (g_currentStatus == 1) {
                    $('#dropButton_memoReply').removeClass('d-none');
                    $('#submitAuditeeButton_memoReply').removeClass('d-none');

                } else if (g_currentStatus == 3) {
                    if (g_riskId == 3) {
                        $('#dropButton_memoReply').addClass('d-none');
                        $('#submitAuditeeButton_memoReply').addClass('d-none');

                    } else {
                        $('#dropButton_memoReply').addClass('d-none');
                        $('#submitAuditeeButton_memoReply').addClass('d-none');

                    }

                } else {
                    $('#dropButton_memoReply').addClass('d-none');
                    $('#submitAuditeeButton_memoReply').addClass('d-none');

                }
                $('#complianceCycleEvidences').empty();
                if (data[0].attacheD_EVIDENCES.length>0){
                    $.each(data[0].attacheD_EVIDENCES, function (i, pp) {

                        var extension = pp.imagE_NAME.split('.').pop().toLowerCase();
                        const contentType = getContentType(extension);

                        // Create and append the attachment item
                        const container = document.createElement('div');
                        container.className = 'evidence-link';

                        // Add icon
                        const icon = document.createElement('i');
                        icon.className = getIconClass(extension) + ' evidence-icon mr-1';
                        container.appendChild(icon);

                        // Add label
                        const label = document.createElement('span');
                        label.innerText = pp.imagE_NAME;
                        label.classList.add('text-primary');

                        // Add cursor style to make it look like a link
                        label.style.cursor = 'pointer';
                        container.appendChild(label);

                        // Add click event to download file on selection
                        container.addEventListener('click', function () {
                            downloadFile(pp.filE_ID);
                        });

                        $('#complianceCycleEvidences').append(container);
                    });
                }
                else{
                    $('#complianceCycleEvidences').append("<i>No evidence is attached </i>");
                }
            },
            dataType: "json",
        });

    }
    function downloadFile(id) {
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_auditee_evidence_data",
            type: "POST",
            data: {
                'FILE_ID': id,
            },
            cache: false,
            success: function (data) {
                var extension = data.imagE_NAME.split('.').pop().toLowerCase();
                const contentType = getContentType(extension);

                const blob = base64ToBlob(data.imagE_DATA, contentType);
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = data.imagE_NAME;
                link.click(); // Trigger the download

            },
            dataType: "json",
        });


    }
    function getFileExtension(file) {
        var fileName = file.name;
        var extension = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase();
        return extension;
    }
    function getIconClass(extension) {
        switch (extension) {
            case 'pdf': return 'fa fa-file-pdf';
            case 'zip': return 'fa fa-file-archive';
            case 'png':
            case 'jpg':
            case 'jpeg':
            case 'bmp': return 'fa fa-file-image';
            case 'doc':
            case 'docx': return 'fa fa-file-word';
            default: return 'fa fa-file';
        }
    }
    function getContentType(extension) {
        switch (extension) {
            case 'pdf': return 'application/pdf';
            case 'zip': return 'application/zip';
            case 'png': return 'image/png';
            case 'doc': return 'application/msword';
            case 'docx': return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
            default: return 'application/octet-stream';
        }
    }
    function base64ToBlob(base64, contentType) {
        const byteCharacters = atob(base64);
        const byteArrays = [];

        for (let offset = 0; offset < byteCharacters.length; offset += 512) {
            const slice = byteCharacters.slice(offset, offset + 512);

            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        const blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }
    function finalCommentsButtonSave() {
        if ($('#commentAreaInCommentsBox').val() == "") {
            alert("Auditor Comments are Mandatory");
            return;
        }
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/update_observation_status",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId,
                'AUDITOR_COMMENT': $('#commentAreaInCommentsBox').val()
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
            },
            dataType: "json",
        });
    }
    function updateObservationStatus(obs_id, new_status_id, risk_id) {
        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $('#commentsBox').modal('show');
        $('#commentAreaInCommentsBox').val('');
    }
    function dropObservation(obs_id, new_status_id, risk_id) {
        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/drop_observation",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);               
            },
            dataType: "json",
        });
    }
    function submitObservationToAuditee(obs_id, new_status_id, risk_id) {
        $('#' + $('#auditeeEvidences').find('input[type="file"]').attr('id'))


        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/submit_observation_to_auditee",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
            },
            dataType: "json",
        });
    }

    function getEntityObservation() {
        $('#manageObsPanel tbody').empty();
        if ($('#entitySelectField option:selected').val() != 0) {            
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/get_observations",
                type: "POST",
                data: {
                    'ENG_ID': $('#entitySelectField option:selected').val()
                },
                cache: false,
                success: function (data) {
                    $.each(data, function (i, v) {
                        $('#auditPeriodNameField').val(v.period);
                        $('#manageObsPanel tbody').append(' <tr id="' + v.obS_ID + '"><td class="text-center">' + v.memO_NO + '</td><td>' + v.heading + '</td><td>' + v.violation + '</td><td>' + v.obS_RISK + '</td><td>' + v.obS_STATUS + '</td><td class="text-center"><a onclick="event.preventDefault();ObservationViewerPanel(' + v.obS_ID + ',' + v.obS_STATUS_ID + ', ' + v.obS_RISK_ID + ')" href="#" class="text-hover">View Memo</a></td><td class="text-center"><a onclick="ObservationUpdatePanel(' + v.obS_ID + ')" href="#" class="text-hover">Edit Memo</a></td></tr>');
                    });
                    setTimeout(function () {
                        if (g_obsId != 0) {
                            var rowpos = $('#manageObsPanel tbody tr#' + g_obsId).position();
                            $('html').scrollTop(rowpos.top);
                        }
                    },200)
                   

                },
                dataType: "json",
            });

        }
    }

    function ObservationUpdatePanel(obs_id) {
        g_obsId = obs_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_dept_observation_text",
            type: "POST",
            data: {
                'OBS_ID': obs_id
            },
            cache: false,
            success: function (data) {
                $('#updateMemoModel').modal('show');
                $('#updateMemoContent').val(data[0].obS_TEXT).trigger('change');
                $('#updateMemo_heading').val(data[0].heading);
                $('#updateMemo_risk').val(data[0].obS_RISK_ID);
                $('#updateMemo_instances').val(data[0].nO_OF_INSTANCES);
            },
            dataType: "json",
        });

    }

    function finalUpdateMemoContent(obs_id) {
        g_obsId = obs_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/update_observation_text",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'OBS_TITLE': $('#updateMemo_heading').val(),
                'RISK_ID': $('#updateMemo_risk').val(),
                'OBS_TEXT': $('.richText-editor').html(),
                'NO_INSTANCES': $('#updateMemo_instances').val()
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
            },
            dataType: "json",
        });

    }

    function finalUpdateMemoContentWithReference(obs_id) {
        var referenceTypeId = $('#referenceTypeSelect').val();
        if (referenceTypeId === "0") {
            alert("Select Reference Type (Manual/Policy/Circular)");
            return;
        }
        var referenceTypeText = $('#referenceTypeSelect option:selected').text();
        var divisionId = $('#divisionSelect').val();
        var instructionsTitle = $('#instructionsTitle').val();
        var instructionsDate = $('#instructionsDate').val();
        var instructionsDetails = $('#instructionsDetails').val();
        if (divisionId === "0") {
            alert("Select Division");
            return;
        }
        if (!instructionsTitle) {
            alert("Enter Instructions Title");
            return;
        }
        if (!instructionsDate) {
            alert("Select Instructions Date");
            return;
        }
        if (!instructionsDetails) {
            alert("Enter Instructions Details");
            return;
        }

        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/UpdateAnnexureInstructions",
            type: "POST",
            data: {
                'ReferenceTypeId': referenceTypeId,
                'ReferenceType': referenceTypeText,
                'InstructionsTitle': instructionsTitle,
                'InstructionsDate': instructionsDate,
                'InstructionsDetails': instructionsDetails,
                'ENTITY_ID': divisionId,
                'CHECKLIST_DETAILS_ID': 0
            },
            success: function () {
                finalUpdateMemoContent(obs_id);
            },
            error: function () {
                alert("Error saving instructions. Please try again.");
            }
        });
    }

</script>

<div class="row">
    <div class="col-md-12 mt-3">
        <h3 style=" display:block;color: #45c545;">Manage Audit Observations</h3>
    </div>
    <div class="row col-md-12 mt-3">
        <div class="col-md-2">
            <label><b>Entity:</b></label>
        </div>
        <div class="col-md-10">
            <input id="entityNameField" disabled="disabled" class="form-control ml-1 d-none" type="text" />
            <select id="entitySelectField" onchange="getEntityObservation()" class="form-control form-select">
                <option value="0" id="0">--Select Audit Entity--</option>
                @{
                    if (ViewData["EntitiesList"] != null)
                    {
                        foreach (var item in (dynamic)(ViewData["EntitiesList"]))
                        {
                            <option value="@item.ENG_ID" id="@item.ENG_ID">@item.NAME</option>
                        }
                    }
                }

            </select>
        </div>
    </div>
    <div class="row col-md-12 mt-3">
        <div class="col-md-2">
            <label><b>Audit Period:</b></label>
        </div>
        <div class="col-md-10 ">
            <input id="auditPeriodNameField" disabled="disabled" class="form-control ml-1" type="text" />
        </div>
    </div>
    <div class="row col-md-12 mt-3">
        <table id="manageObsPanel" class="table table-hover table-bordered table-hover mt-3 table-striped">
            <thead style="background-color: #19875478 !important; ">
                <tr>
                    <th class="col-md-auto">Memo No.</th>
                    <th class="col-md-auto">Title</th>                    
                    <th class="col-md-auto">Violation</th>                    
                    <th class="col-md-auto">Risk Category</th>
                    <th class="col-md-auto">Status</th>                   
                    <th class="col-md-auto text-center">Action</th>
                    <th class="col-md-auto text-center">Action</th>
                </tr>
            </thead>
            <tbody>
             
            </tbody>

        </table>
    </div>

</div>
<div id="commentsBox" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Auditor Comments</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="commentAreaInCommentsBox">Comments</label>
                        <textarea class="form-control" rows="4" id="commentAreaInCommentsBox" placeholder="Enter Comments here.."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button onclick="finalCommentsButtonSave();" id="finalCommentsButtonSave" type="button" class="btn btn-danger">Submit</button>
            </div>
        </div>
    </div>
</div>


<div id="viewMemoModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Observation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="viewMemo_violation" class="font-weight-bold">Violation</label>
                        <div id="viewMemo_violation" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_subprocess" class="font-weight-bold">Nature</label>
                        <div id="viewMemo_subprocess" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_heading" class="font-weight-bold">Heading</label>
                        <div id="viewMemo_heading" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_risk">Risk</label>
                        <select id="viewMemo_risk" class="form-select form-control" aria-label="Default select example">
                            <option value="0" id="0" selected>--Select Risk Category--</option>
                            @{
                                if (ViewData["RiskList"] != null)
                                {

                                    foreach (var risk in (dynamic)(ViewData["RiskList"]))
                                    {
                                        <option id="@risk.R_ID" value="@risk.R_ID">@risk.DESCRIPTION</option>
                                    }

                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_memo" class="font-weight-bold">Memo</label>
                        <div id="viewMemo_memo" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                   
                    <div class="form-group">
                        <label for="viewMemo_response" class="font-weight-bold">Auditee Response</label>
                        <div id="viewMemo_response" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div id="evidenceViewer" class="input-field">
                        <label class="font-weight-bold">Evidences</label>
                        <div class="row col-md-12 mt-3 mb-3">
                            <div id="complianceCycleEvidences">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="dropButton_memoReply" onclick="dropObservation(g_obsId,7,g_riskId);" type="button" data-bs-dismiss="modal" class="btn btn-danger d-none">Drop Observation</button>
                <button id="submitAuditeeButton_memoReply" onclick="submitObservationToAuditee(g_obsId, 2, g_riskId);" type="button" data-bs-dismiss="modal" class="btn btn-danger d-none">Submit to Auditee</button>
               
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="updateMemoModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Update Observation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                   
                    <div class="form-group">
                        <label for="updateMemo_heading" class="font-weight-bold">Title / Heading</label>
                        <input id="updateMemo_heading" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="updateMemoContent" class="font-weight-bold">Memo</label>
                        <textarea id="updateMemoContent" rows="5" class="form-control">

                        </textarea>
                    </div>
                    <div class="form-group">
                        <label for="updateMemo_risk">Risk</label>
                        <select id="updateMemo_risk" class="form-select form-control" aria-label="Default select example" disabled>
                            <option value="0" id="0" selected>--Select Risk Category--</option>
                            @{
                                if (ViewData["RiskList"] != null)
                                {

                                    foreach (var risk in (dynamic)(ViewData["RiskList"]))
                                    {
                                        <option id="@risk.R_ID" value="@risk.R_ID">@risk.DESCRIPTION</option>
                                    }

                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="updateMemo_instances">No. of Instances</label>
                        <input id="updateMemo_instances" type="number" min="0" class="form-control" />
                    </div>

                    <!-- Reference Type and Instructions -->
                    <div class="form-group mt-3">
                        <label>Reference Type</label>
                        <div class="row">
                            <div class="col-md-6">
                                <select id="referenceTypeSelect" class="form-select form-control">
                                    <option value="0">--Select Reference Type--</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <select id="divisionSelect" class="form-select form-control" style="display:none;">
                                    <option value="0">--Select Division--</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div id="instructionFields" class="form-group mt-3" style="display:none;">
                        <div class="row">
                            <div class="col-md-4 mt-2">
                                <label>Instructions Title</label>
                                <input id="instructionsTitle" type="text" class="form-control" />
                            </div>
                            <div class="col-md-4 mt-2">
                                <label>Instructions Date</label>
                                <input id="instructionsDate" type="date" class="form-control" />
                            </div>
                            <div class="col-md-4 mt-2">
                                <label>Instructions Details</label>
                                <textarea id="instructionsDetails" class="form-control"></textarea>
                            </div>
                        </div>
                    </div>
                    <!-- /Reference Type and Instructions -->


                </form>
            </div>
            <div class="modal-footer">

                <button id="updateMemoContent_submit" onclick="finalUpdateMemoContentWithReference(g_obsId);" type="button" data-bs-dismiss="modal" class="btn btn-danger">Update Memo Text</button>

                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>